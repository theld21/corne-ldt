/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        enter {
            bindings = <&kp ENTER>;
            key-positions = <37 38>;
        };

        back {
            bindings = <&kp BACKSPACE>;
            key-positions = <36 37>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <38 36 37>;
        };

        vuong1 {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <7 19>;
            layers = <0>;
        };

        vuong2 {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 20>;
            layers = <0>;
        };

        nhon1 {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <8 19>;
            layers = <0>;
        };

        nhon2 {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <20 9>;
            layers = <0>;
        };

        tron1 {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <31 20>;
            layers = <0>;
        };

        tron2 {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <21 32>;
            layers = <0>;
        };

        nhay {
            bindings = <&kp GRAVE>;
            key-positions = <6 18>;
            layers = <0>;
        };

        nga {
            bindings = <&kp TILDE>;
            key-positions = <6 7>;
            layers = <0>;
        };

        cong {
            bindings = <&kp PLUS>;
            key-positions = <8 7>;
            layers = <0>;
        };

        tru {
            bindings = <&kp MINUS>;
            key-positions = <19 20>;
            layers = <0>;
        };

        duoi {
            bindings = <&kp UNDERSCORE>;
            key-positions = <31 32>;
            layers = <0>;
        };

        bang {
            bindings = <&kp EQUAL>;
            key-positions = <20 21>;
            layers = <0>;
        };

        cham-than {
            bindings = <&kp EXCLAMATION>;
            key-positions = <17 5>;
        };

        hoac {
            bindings = <&kp PIPE>;
            key-positions = <4 16>;
        };

        do-la {
            bindings = <&kp DOLLAR>;
            key-positions = <3 16>;
        };

        phan-tram {
            bindings = <&kp PERCENT>;
            key-positions = <4 15>;
        };

        sao {
            bindings = <&kp ASTERISK>;
            key-positions = <4 3>;
        };

        va {
            bindings = <&kp AMPERSAND>;
            key-positions = <16 15>;
        };

        thang {
            bindings = <&kp POUND>;
            key-positions = <5 16>;
        };

        xoet {
            bindings = <&kp BACKSLASH>;
            key-positions = <4 17>;
        };

        mu {
            bindings = <&kp CARET>;
            key-positions = <4 5>;
        };

        a-cong {
            bindings = <&kp AT_SIGN>;
            key-positions = <17 16>;
        };

        w-back {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <39 11>;
            layers = <0>;
        };

        w-l {
            bindings = <&kp LC(LEFT_ARROW)>;
            key-positions = <39 19>;
            layers = <0>;
        };

        w-d {
            bindings = <&kp LC(DOWN)>;
            key-positions = <39 20>;
            layers = <0>;
        };

        w-r {
            bindings = <&kp LC(RIGHT)>;
            key-positions = <39 21>;
            layers = <0>;
        };

        w-u {
            bindings = <&kp LC(UP_ARROW)>;
            key-positions = <39 8>;
            layers = <0>;
        };

        w-back_ {
            bindings = <&kp LG(BACKSPACE)>;
            key-positions = <39 11>;
            layers = <2>;
        };

        w-l_ {
            bindings = <&kp LG(LEFT_ARROW)>;
            key-positions = <39 19>;
            layers = <2>;
        };

        w-d_ {
            bindings = <&kp LG(DOWN)>;
            key-positions = <39 20>;
            layers = <2>;
        };

        w-u_ {
            bindings = <&kp LG(UP_ARROW)>;
            key-positions = <39 8>;
            layers = <2>;
        };

        l {
            bindings = <&kp LEFT_ARROW>;
            key-positions = <40 19>;
        };

        r {
            bindings = <&kp RIGHT>;
            key-positions = <40 21>;
        };

        u {
            bindings = <&kp UP_ARROW>;
            key-positions = <40 8>;
        };

        d {
            bindings = <&kp DOWN_ARROW>;
            key-positions = <40 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ldt21_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E         &kp R         &kp T        &kp Y        &kp U      &kp I           &kp O    &kp P     &kp BSPC
&kp TAB     &kp A  &kp S  &kp D         &kp F         &kp G        &kp H        &kp J      &kp K           &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C         &kp V         &kp B        &kp N        &kp M      &kp COMMA       &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                          &kp LEFT_ALT  &kp LEFT_WIN  &kp LCTRL    &lt 1 SPACE  &kp ENTER  &lt 1 LEFT_ALT
            >;

            label = "LDT";
        };

        number_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&to 0           &to 2   &trans  &trans          &trans    &trans       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DELETE  &kp UP_ARROW    &kp BACKSPACE
&kp CAPS        &trans  &trans  &trans          &trans    &trans       &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LEFT    &kp DOWN        &kp RIGHT
&kp LEFT_SHIFT  &trans  &trans  &bt BT_CLR_ALL  &trans    &trans       &kp N7        &kp N8        &kp N9        &kp N0      &kp LEFT_SHIFT  &kp LEFT_ALT
                                &kp LEFT_ALT    &kp LWIN  &kp LCTRL    &kp SPACE     &kp ENTER     &kp LEFT_ALT
            >;

            label = "Number";
        };

        layer_mac {
            label = "LDT_";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E      &kp R         &kp T           &kp Y        &kp U      &kp I           &kp O    &kp P     &kp BSPC
&kp TAB     &kp A  &kp S  &kp D      &kp F         &kp G           &kp H        &kp J      &kp K           &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C      &kp V         &kp B           &kp N        &kp M      &kp COMMA       &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                          &kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN    &lt 1 SPACE  &kp ENTER  &lt 1 LEFT_ALT
            >;
        };
    };
};
